# Copyright 2016 Erik Van Hamme
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

PROJECT := <%= data[:name] %>

<%
	text = ''
	data[:arch].each do |arch|
		text += "-m#{arch} "
	end
	text.chomp!(' ')
-%>
ARCH := <%= text %>

DEFINES := \
<%
	data[:defines].each do |define|
		text = "-D#{define.name} \\"
		text = "-D#{define.name}=#{define.value} \\" unless define.value == nil
-%>
	<%= text %>
<%
	end
-%>

SRCS := \
<%
	data[:srcs].each do |src|
-%>
	<%= src %> \
<%
	end
-%>

SYS_SRCS := \
<%
	data[:sys_srcs].each do |sys_src|
-%>
	<%= sys_src %> \
<%
	end
-%>

INCS := \
<%
	data[:incs].each do |inc|
-%>
	<%= inc %> \
<%
	end
-%>

SYS_INCS := \
<%
	data[:sys_incs].each do |sys_inc|
-%>
	<%= sys_inc %> \
<%
	end
-%>

STATIC_LIBS :=\
<%
	data[:libs].each do |lib|
-%>
	<%= lib %> \
<%
	end
-%>

OFFSET := <%= data[:offset] %>

BUILDMODE := <%= data[:mode] %>
BUILDDIR := $(BUILDMODE)

OBJECTS := $(patsubst %,$(BUILDDIR)/%.o,$(SRCS)) $(patsubst %,$(BUILDDIR)/%sys.o,$(SYS_SRCS))
OBJECTDIRS := $(sort $(dir $(OBJECTS)))

INCLUDEPATHS := $(patsubst %,-I %,$(INCS)) $(patsubst %,-isystem %,$(SYS_INCS))

ELFFILE := $(BUILDDIR)/$(PROJECT).elf
BINFILE := $(BUILDDIR)/$(PROJECT).bin

OOCD_CFGS := \
<%
	data[:oocd_cfgs].each do |oocd_cfg|
-%>
	-f "<%= oocd_cfg %>" \
<%
	end unless data[:oocd_cfgs] == nil
-%>

OOCD_CMDS := \
<%
	data[:oocd_cmds].each do |oocd_cmd|
-%>
	-c "<%= oocd_cmd %>" \
<%
	end unless data[:oocd_cmds] == nil
-%>

W_COMMON := -Wall -Wextra -Wcast-align -Wcast-qual -Wdisabled-optimization -Wformat=2 -Winit-self -Wlogical-op \
	-Wmissing-include-dirs -Wredundant-decls -Wstrict-overflow=5 -Wno-unused -Wno-variadic-macros -Wno-parentheses \
	-Wshadow -Wpedantic <%= data[:w_common_opt] %>
W_C := $(W_COMMON)
W_CPP := $(W_COMMON) -Wnoexcept -Woverloaded-virtual -Wsign-promo -Wstrict-null-sentinel -Wold-style-cast
W_AS := -Wall

DEPGEN = -MMD -MP -MF"$(@:%.o=%.d)"
DEPS := $(patsubst %.o,%.d,$(OBJECTS))

C_FLAGS_COMMON = -c $(DEPGEN) -ffunction-sections -fdata-sections -Wa,-adhlns="$@.lst" -fmessage-length=0
C_FLAGS = $(C_FLAGS_COMMON) -fno-builtin <%= data[:c_flags_opt] %>
CPP_FLAGS = $(C_FLAGS_COMMON) <%= data[:cpp_flags_opt] %>
AS_FLAGS = -c <%= data[:as_flags_opt] %>
LD_FLAGS = -T "ldscript.ld" -Xlinker --gc-sections -nostartfiles --specs=nano.specs <%= data[:ld_flags_opt] %> \
	-Wl,-Map=$(BUILDDIR)/$(PROJECT).map
OC_FLAGS = -O binary

CC := <%= data[:gcc_path] %>arm-none-eabi-gcc
AS := <%= data[:gcc_path] %>arm-none-eabi-gcc
GPP := <%= data[:gcc_path] %>arm-none-eabi-g++
LD := <%= data[:gcc_path] %>arm-none-eabi-g++
OC := <%= data[:gcc_path] %>arm-none-eabi-objcopy
OS := <%= data[:gcc_path] %>arm-none-eabi-size
OOCD := <%= data[:oocd_path] %>openocd

-include targets.mk

.DEFAULT_GOAL := all

.PHONY:: all info info_verbose clean flash oocd

all:: $(OBJECTDIRS) $(BINFILE)

info::
	@echo "project:       $(PROJECT)"
	@echo ""
	@echo "bin file:      $(BINFILE)"
	@echo ""
	@echo "arch:          $(ARCH)"
	@echo ""
	@echo "builddir:      $(BUILDDIR)"
	@echo ""
	@echo "includepaths:  $(INCLUDEPATHS)"
	@echo ""
	@echo "cflags:        $(C_FLAGS)"
	@echo ""
	@echo "cpplags:       $(CPP_FLAGS)"
	@echo ""
	@echo "asflags:       $(AS_FLAGS)"
	@echo ""
	@echo "ldflags:       $(LD_FLAGS)"
	@echo ""
	@echo "defines:       $(DEFINES)"
	@echo ""
	@echo "static libs:   $(STATIC_LIBS)"
	@echo ""

info_verbose:: info
	@echo "sources:       $(SRCS)"
	@echo ""
	@echo "systemsources: $(SYS_SRCS)"
	@echo ""
	@echo "objects:       $(OBJECTS)"
	@echo ""
	@echo "deps:          $(DEPS)"
	@echo ""

clean::
	@echo "Cleaning"
	@rm -rf $(BUILDDIR)

$(OBJECTDIRS):
	@echo "Creating output directories"
	@mkdir -p $(OBJECTDIRS)

$(ELFFILE): $(OBJECTS) $(SLIBS)
	@echo "Linking"
	@$(LD) $(ARCH) $(LD_FLAGS) $(OBJECTS) $(STATIC_LIBS) -o $(ELFFILE)
	@echo "---------------------------------------"
	@$(OS) $(ELFFILE)
	@echo "---------------------------------------"

$(BINFILE): $(ELFFILE)
	@$(OC) $(OC_FLAGS) $(ELFFILE) $(BINFILE)

flash: $(BINFILE)
	$(OOCD) $(OOCD_CFGS) $(OOCD_CMDS)

oocd: $(BINFILE)
	$(OOCD) $(OOCD_CFGS)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(DEPS)),)
-include $(DEPS)
endif
endif

$(BUILDDIR)/%.s.o : %.s
	@echo "Assembling $<"
	@$(AS) $(ARCH) $(AS_FLAGS) $(W_AS) -o "$@" "$<"

$(BUILDDIR)/%.c.o : %.c
	@echo "Compiling $<"
	@$(CC) $(ARCH) $(C_FLAGS) $(INCLUDEPATHS) $(DEFINES) $(W_C) -o "$@" "$<"

$(BUILDDIR)/%.cpp.o : %.cpp
	@echo "Compiling $<"
	@$(GPP) $(ARCH) $(CPP_FLAGS) $(INCLUDEPATHS) $(DEFINES) $(W_CPP) -o "$@" "$<"

$(BUILDDIR)/%.ssys.o : %.s
	@echo "Assembling $<"
	@$(AS) $(ARCH) $(AS_FLAGS) -o "$@" "$<"

$(BUILDDIR)/%.Ssys.o : %.S
	@echo "Assembling $<"
	@$(AS) $(ARCH) $(AS_FLAGS) -o "$@" "$<"

$(BUILDDIR)/%.csys.o : %.c
	@echo "Compiling $<"
	@$(CC) $(ARCH) $(C_FLAGS) $(INCLUDEPATHS) $(DEFINES) -o "$@" "$<"

$(BUILDDIR)/%.cppsys.o : %.cpp
	@echo "Compiling $<"
	@$(GPP) $(ARCH) $(CPP_FLAGS) $(INCLUDEPATHS) $(DEFINES) -o "$@" "$<"